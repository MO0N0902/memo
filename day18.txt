day18

컬렉션 프레임워크(Map) -> DBMS

0. 복습
1) 예외처리
	프로그램이 비정상적인 종료를 막고 정상적으로 종료될 수 있도록 하기 위함

- 예외 종류
	일반예외 :	컴파일시 반드시 확신
		Exception을 상속
	실행예외 :	컴파일 시는 확인되지 않고 실행중에 발생
		RuntimeException를 상속
	Error :	JVM에서 발생하며 복구 불가능

- 예외처리 구문
	try{
	}catch(예외타입 참조변수{
	}..{
	}finally{
	}

- throws
	메소드 선언부에 사용하여 예외처리를 메소드를 사용하는 쪽에서 진행

- throw
	예외 강제 발생시키기

- 사용자 정의 예외클래스
	새로운 예외 클래스를 만들어서 예외상황을 처리하는것을 의미
	extends Exception나 extends Runtime Exception을 상속받아 만들어야 한다
	
2) 컬렉션 프레임워크
	컬렉션 :  객체들을 효율적으로 저장하고 관리하기 위한 클래스의 집합
	컬렉션 프레임워크 : 데이터 구조와 알고리즘을 제공하는 표준화된 클래스 및 인터페이스 모음

- list 
	순서가 있는 데이터의 집합, 중복 허용
	구현 클래스 :ArrayList

- set
	순서가 없는 데이터의 집합, 중복 허용하지 않음
	구현 클래스 : hashSet

- Map
	키-값 한쌍으로 구성된 데이터, 키는 중복 불가
	구현 클래스 : hashMap


====================================================================================
1. 컬렉션 프레임워크(Map)
1)Map
	데이터의 순서를 보장하지 않음
	데이터를 key와 value  한쌍으로 저장하여 key로 데이터에 접근할 수 있다
	key ArrayList의 index와 비슷한 역할을 하며 중복을 허용하지 않는다(index에 중복이 없는것과 동일)

2) 구현클래스
	hashMap
	hashCode()가 반환하는 해시코드를 이요하며 검색속도가 상대적으로 빠르다
	이미 저장된 key를 가진 한쌍의 데이터를 넣으면 가장 마지막에 넣은 value로 수정된다(value는 수정가능)
	저장되지 않은 key를 가진 한쌍의 데이터를 넣으면 새롭게 추가가 된다

3) hash
	데이터를 다루는 기법, map처럼 key와 value로 이루어져있다
	키(key) 해시함수(hash function)를 통해 해시로 변경이 되며 해시는 값과 매칭되어 저장소에 저장이됨

- 키(key)
	고유한 값을 의미함
	해시함수의 input
	다양한 길이의 값이 될 수 있다
	이 상태로 최종 저장소에 저장된다면 다양한 길이만큼의 저장소를 구성해야하므로 해시함수로 값을 바꿔서 저장이
	되어야 공간의 효율성을 추구할 수 있다

- 해시함수(Hash Function)
	key를 해시로 바꿔주는 역할
	다양한 길이를 가지고 있는 키를 일정한 길이로 변경하여 저장소를 효율적으로 운영함
	다만, 서로 다른 키가 같은 해시가 되는 경우를 해시 충돌이라고 하는데 
	그 확률을 줄이는 함수를 만드는것이 중요함

- 해시 : 해시 함수의 결과물, 저장소에서 값과 매칭되어 저장된다

- 값 : 저장소에 최종적으로 저장되는 값으로 키와 매칭되어 저장, 삭제, 검색, 접근이 가능


+) 해시테이블
	데이터를 key와 값으로 데이터에 저장하는 자료구조
	키를 해시함수에 입력하여 해시값 또는 인덱스를 계 
	계산된 인덱스를 통해 값을 저장하거나 조회 가능
	키를 기반으로 데이터를 저장하므로 중복키는 불가능하다                                                              	
	- 장점 :  빠른데이터 검색, 삽입, 삭제 가능/ 간단한 구현
	- 단점 :  해시 충돌이 발생하면 성능저하
		 해시 함수 설계에 따라 효율성이 달라짐
	- 중복데이터 탐지, 캐시구현, 데이터베이스의 인덱싱 등




















